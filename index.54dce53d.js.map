{"mappings":"iiBAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,S,0BCAAE,EAAAF,EAAA,S,aAGO,SAASG,EAAaC,G,IAAEC,EAAFD,EAAEC,MAAOC,EAATF,EAASE,aAAcC,EAAvBH,EAAuBG,YAAaC,EAApCJ,EAAoCI,UAAWC,EAA/CL,EAA+CK,aAC1E,MAAO,mLASwCC,OAHRL,EAAM,iHAG4BK,QAA1B,EAAAR,EAAAS,WAAUH,GAAW,OAG/BE,OAHoCJ,EAAaM,MAAM,EAAG,GAAG,2DAQtDF,QALP,EAAAG,EAAAC,gBAAeL,GAAc,oGAMrDC,OAD+BH,EAAY,oBACrCG,OAANL,EAAM,iF,qDDfrB,IAAMU,EAAY,IAAI,EAAAC,EAAAC,WAChBC,EAAgBC,SAASC,cAAc,gB,SAM9BC,I,OAAAA,EAAfC,EAAArB,EAAA,CAAAqB,EAAAC,GAAAC,MAAA,SAAAC,I,IAEUC,EAEAC,EAGFC,EACEC,EAGAC,E,2FATgBf,EAAUgB,sB,OAQhC,IARML,EAAOM,EAAAC,KAEPN,EAAcD,EAAQQ,QAGxBN,EAAgB,GACdC,EAAe,SAAAM,G,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,G,EAEnC,GAAxBP,EAAcW,QACfT,EAAQD,EAAaF,EAAYY,QACrCX,EAAcY,KAAKb,EAAYG,IAC/BF,EAAgBA,EAAca,QAAO,SAACC,EAAGC,EAAGC,G,OAAQA,EAAIC,QAAQH,IAAMC,C,IAUxEG,EAPelB,EAAcmB,QAC3B,SAACC,EAAQC,G,OAAkBD,EAAS7C,EAAa8C,E,GACjD,KAOGC,I,kDAELC,QAAQC,IAAGpB,EAAAqB,I,2DA3BYC,MAAAC,KAAAC,U,CAiC3B,SAASV,EAAeE,GACtB9B,EAAcuC,UAAYT,C,EArCvB,EAALU,EAAAC,aACA,EAAAD,EAAAE,c,WAEevC,EAAYiC,MAAAC,KAAAC,U,CA8B3BK,GASgB,IAAVC,EAAe3C,SAASC,cAAc,mB,SAE7B2C,I,OAAAA,EAAfzC,EAAArB,EAAA,CAAAqB,EAAAC,GAAAC,MAAA,SAAAC,I,IAEUuC,EAGAC,EAWFC,EAGEC,EAGArC,EAwBGsC,E,yEAATA,EAAA,SAAsBC,GAE2B,IAA3CC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,GAKpEJ,EAAaK,OAAOC,MAAK,SAAAC,G,OAASA,EAAMC,KAAOZ,EAAe,GAAGY,E,IAG5B3B,QAA7BC,IAAI,qCAI2BkB,EAA1B9B,KAAK0B,GAG4BO,aAAnCM,QAAQ,cAAeR,KAAKS,UAAUV,I,oBA7DvBvD,EAAUkE,mB,UAAlCjB,EAAehC,EAAAC,KAGfgC,EAAmBD,EAAgB9B,QAIpB,C,wCACZgD,MACL,kE,OAUJ,IALIhB,EAAiB,GAGfC,EAAgB,SAAAhC,G,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,G,EAEnC,GAAzB+B,EAAe3B,QAChBT,EAAQqC,EAAcF,EAAiB1B,QAC3C2B,EAAe1B,KAAKyB,EAAiBnC,IACrCoC,EAAiBA,EAAezB,QAC9B,SAACC,EAAGC,EAAGC,G,OAAQA,EAAIC,QAAQH,IAAMC,C,IASrCwC,EALuBjB,EAAenB,QACpC,SAACC,EAAQoC,G,OAAmBpC,GAAS,EAAAqC,EAAAC,sBAAqBF,E,GAC1D,KAakBjE,SAASC,cAAc,iBAC/BmE,iBAAiB,QAASnB,GAwBjClB,I,kDAELC,QAAQC,IAAGpB,EAAAqB,I,2DAvEgBC,MAAAC,KAAAC,U,CA8E/B,SAAS2B,EAAgBnC,GACvBc,EAAaL,UAAYT,C,CAI3B,SAASE,IACP,IAAQsC,EAAuBrE,SAC5BC,cAAc,SACdqE,kBAAkBC,wBAFbC,OAIRC,OAAOC,SAAS,CACdC,IAAkB,EAAbN,EACLO,SAAU,U,aA1FChC,EAAgBT,MAAAC,KAAAC,U,CA2E/BwC,GElIAhG,EAAA,S","sources":["src/index.js","src/js/homeWeekly.js","src/js/catalog-functions/weekly-markup.js","src/js/homeUpcoming.js"],"sourcesContent":["import './js/color-theme';\nimport './js/homeWeekly';\nimport './js/homeUpcoming';\nimport './js/modal';\nimport './js/mobile-menu';\nimport './js/hero';\nimport './js/movie-card';\nimport './js/spiner';\n","import { MoviesAPI } from './MoviesAPI';\nimport { createMovies } from '/src/js/catalog-functions/weekly-markup';\nimport { createUpcomingMovies } from '/src/js/catalog-functions/upcoming-markup';\nimport { onScroll, onToTopBtn } from './scroll';\nimport { addAndRemoveToLocalStorage } from './localStorage';\nimport { openModalMovie } from './modal-window/modal-movie';\n\nconst moviesAPI = new MoviesAPI();\nconst weeklyGallery = document.querySelector('.weekly-list');\n\n// скрол\nonScroll();\nonToTopBtn();\n\nasync function onRenderPage() {\n  try {\n    const respons = await moviesAPI.getTrendMoviesWeeks();\n\n    const responsData = respons.results;\n\n    //  отримуємо три рамдомних фільми\n    let responsMovies = [];\n    const getRandomInt = max => Math.floor(Math.random() * Math.floor(max));\n\n    while (responsMovies.length != 3) {\n      let index = getRandomInt(responsData.length);\n      responsMovies.push(responsData[index]);\n      responsMovies = responsMovies.filter((v, i, arr) => arr.indexOf(v) == i);\n    }\n\n    const markup = responsMovies.reduce(\n      (markup, responsMovies) => markup + createMovies(responsMovies),\n      ''\n    );\n\n    // console.log(markup.length);\n\n    updateNewsList(markup);\n    // скрол\n    scrollPage();\n  } catch (err) {\n    console.log(err);\n  }\n}\nonRenderPage();\n// console.log(onRenderPage());\n\nfunction updateNewsList(markup) {\n  weeklyGallery.innerHTML = markup;\n}\n\n// ===секція \"нові фільми\"===\n\nconst upcomingCard = document.querySelector('.upcoming-cover');\n\nasync function onRenderNewMovie() {\n  try {\n    const responsNewMovie = await moviesAPI.getUpcomingFilms();\n    // console.log(respons);\n\n    const responsDataMovie = responsNewMovie.results;\n    // console.log(responsDataMovie);\n    // console.log(responsData.length);\n\n    if (!responsDataMovie) {\n      return alert(\n        'Вибачте! Нових фільмів не знайдено/Sorry! No new movies found'\n      );\n    }\n\n    // отримуємо один рамдомний фільм\n    let randomNewMovie = [];\n    // console.log(randomNewMovie);\n\n    const getRandomFilm = max => Math.floor(Math.random() * Math.floor(max));\n\n    while (randomNewMovie.length != 1) {\n      let index = getRandomFilm(responsDataMovie.length);\n      randomNewMovie.push(responsDataMovie[index]);\n      randomNewMovie = randomNewMovie.filter(\n        (v, i, arr) => arr.indexOf(v) == i\n      );\n    }\n\n    const markupNewMovie = randomNewMovie.reduce(\n      (markup, randomNewMovie) => markup + createUpcomingMovies(randomNewMovie),\n      ''\n    );\n\n    updateNewMovies(markupNewMovie);\n\n    // setTimeout(function () {\n    // const remindMeBtn = document.querySelector('.upcoming-btn');\n    // remindMeBtn.addEventListener('click', addToLibrary);\n    // function addToLibrary(event) {\n    //   addAndRemoveToLocalStorage('libraryFilm', JSON.stringify(randomNewMovie));\n    // }\n\n    // Додаємо слухача на кнопку Remind me і при кліку на цю кнопку викликаємо функцію addToLibrary (запис в локальне сховище)\n    const remindMeBtn = document.querySelector('.upcoming-btn');\n    remindMeBtn.addEventListener('click', addToLibrary);\n    function addToLibrary(event) {\n      // Отримати поточний список фільмів з локального сховища\n      let libraryFilms = JSON.parse(localStorage.getItem('libraryFilm')) || [];\n      // console.log(libraryFilms.flat());\n      // console.log(randomNewMovie[0].id);\n      // Перевірка чи такого фільму ще немає в Локальному сховищі\n      if (\n        libraryFilms.flat().some(value => value.id === randomNewMovie[0].id)\n      ) {\n        // Якщо фільм вже є, тоді поки що нічого не робимо\n        console.log('Фільм вже додано в Локал Сторідж');\n        return;\n      } else {\n        // console.log('Такого фільму ще немає в Локал Сторідж, додаємо');\n        libraryFilms.push(randomNewMovie); // Додаємо новий запис до масиву.\n      }\n      // Зберегти оновлений список фільмів у локальному сховищі\n      localStorage.setItem('libraryFilm', JSON.stringify(libraryFilms));\n    }\n\n    // }, 2000);\n\n    // скрол\n    scrollPage();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nonRenderNewMovie();\n// console.log(onRenderPage());\n\nfunction updateNewMovies(markup) {\n  upcomingCard.innerHTML = markup;\n}\n\n//скрол\nfunction scrollPage() {\n  const { height: cardHeight } = document\n    .querySelector('.main')\n    .firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 1,\n    behavior: 'smooth',\n  });\n}\n","import { getGenres } from './catalog-genres-get';\nimport { getStarsRating } from './catalog-rating-get';\n\nexport function createMovies({ title, release_date, poster_path, genre_ids, vote_average }) {\n  return `\n    <li class=\"weekly-item\">\n  <a href=\"#\" class=\"weekly-link\">\n    <div class=\"weekly-wrapper\">\n\n      <div class=\"weekly-info\">\n        <h2 class=\"weekly-info__title\">${title}</h2>\n\n        <div class=\"catalog-list__additional-info\">\n          <p class=\"weekly-info__genres__data\">${getGenres(genre_ids)} | ${release_date.slice(0, 4)}\n        </p>\n\n          <div class=\"weekly-rating\">${getStarsRating(vote_average)}</div>\n        </div>\n      </div>\n\n      <img\n        src=\"https://image.tmdb.org/t/p/w500${poster_path}\"\n        alt=\"${title}\"\n        \n        class=\"weekly-img\"\n      />\n    </div>\n  </a>\n</li>\n`;\n}\n","import { addAndRemoveToLocalStorage } from './localStorage';\n// import { MoviesAPI } from './MoviesAPI';\n// const moviesAPI = new MoviesAPI();\n\n// import { createUpcomingMovies } from '/src/js/catalog-functions/upcoming-markup';\n\n// const upcomingCard = document.querySelector('.upcoming-cover');\n\n// async function onRenderNewMovie() {\n//   try {\n//     const responsNewMovie = await moviesAPI.getUpcomingFilms();\n//     // console.log(respons);\n\n//     const responsDataMovie = responsNewMovie.results;\n//     // console.log(responsDataMovie);\n//     // console.log(responsData.length);\n\n//     // отримуємо один рамдомний фільм\n//     let randomNewMovie = [];\n\n//     const getRandomFilm = max => Math.floor(Math.random() * Math.floor(max));\n\n//     while (randomNewMovie.length != 1) {\n//       let index = getRandomFilm(responsDataMovie.length);\n//       randomNewMovie.push(responsDataMovie[index]);\n//       randomNewMovie = randomNewMovie.filter(\n//         (v, i, arr) => arr.indexOf(v) == i\n//       );\n//     }\n\n//     const markupNewMovie = randomNewMovie.reduce(\n//       (markup, randomNewMovie) => markup + createUpcomingMovies(randomNewMovie),\n//       ''\n//     );\n\n//     updateNewMovies(markupNewMovie);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// }\n\n// onRenderNewMovie();\n// // console.log(onRenderPage());\n\n// function updateNewMovies(markup) {\n//   upcomingCard.innerHTML = markup;\n// }\n"],"names":["parcelRequire","$bpxeT","$lPhMu","$33a55f79f537a904$export$f0d49a713b8a9d6f","param","title","release_date","poster_path","genre_ids","vote_average","concat","getGenres","slice","$lrjFe","getStarsRating","$1fa2e31062942a99$var$moviesAPI","$dLu6O","MoviesAPI","$1fa2e31062942a99$var$weeklyGallery","document","querySelector","$1fa2e31062942a99$var$_onRenderPage","$parcel$interopDefault","$2TvXO","mark","_callee","respons","responsData","responsMovies1","getRandomInt","index","getTrendMoviesWeeks","_ctx","sent","results","max","Math","floor","random","length","push","filter","v","i","arr","indexOf","$1fa2e31062942a99$var$updateNewsList","reduce","markup","responsMovies","$1fa2e31062942a99$var$scrollPage","console","log","t0","apply","this","arguments","innerHTML","$j1Fxp","onScroll","onToTopBtn","$1fa2e31062942a99$var$onRenderPage","$1fa2e31062942a99$var$upcomingCard","$1fa2e31062942a99$var$_onRenderNewMovie","responsNewMovie","responsDataMovie","randomNewMovie1","getRandomFilm","addToLibrary","event","libraryFilms","JSON","parse","localStorage","getItem","flat","some","value","id","setItem","stringify","getUpcomingFilms","alert","$1fa2e31062942a99$var$updateNewMovies","randomNewMovie","$2fgvN","createUpcomingMovies","addEventListener","cardHeight","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","$1fa2e31062942a99$var$onRenderNewMovie"],"version":3,"file":"index.54dce53d.js.map"}